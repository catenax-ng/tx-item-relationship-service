irs-helm:
  #####################
  # IRS Configuration #
  #####################
  irsUrl: "https://irs.int.demo.catena-x.net"
  ingress:
    enabled: true
    hosts:
      - host: "irs.int.demo.catena-x.net"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - "irs.int.demo.catena-x.net"
        secretName: tls-secret
  digitalTwinRegistry:
    url: https://semantics.int.demo.catena-x.net/registry
  semanticsHub:
    url: https://semantics.int.demo.catena-x.net/hub/api/v1
  bpdm:
    url: https://partners-pool.int.demo.catena-x.net
  minioUser: <path:traceability-irs/data/int/minio#minioUser>
  minioPassword: <path:traceability-irs/data/int/minio#minioPassword>
  keycloak:
    oauth2:
      clientId: <path:traceability-irs/data/int/keycloak/oauth2#clientId>
      clientSecret: <path:traceability-irs/data/int/keycloak/oauth2#clientSecret>
      clientTokenUri: <path:traceability-irs/data/int/keycloak/oauth2#tokenUri>
      jwkSetUri: <path:traceability-irs/data/int/keycloak/oauth2#jwkSetUri>
  edc:
    controlplane:
      apikey:
        secret: "123456"

  #######################
  # Minio Configuration #
  #######################
  minio:
    rootUser: <path:traceability-irs/data/int/minio#minioUser>
    rootPassword: <path:traceability-irs/data/int/minio#minioPassword>

  #########################
  # Grafana Configuration #
  #########################
  grafana:
    enabled: true
    ingress:
      enabled: true
      hosts:
        - "irs-grafana.int.demo.catena-x.net"

      tls:
        - hosts:
            - "irs-grafana.int.demo.catena-x.net"
          secretName: tls-secret

    user: <path:traceability-irs/data/int/grafana#username>
    password: <path:traceability-irs/data/int/grafana#password>

  ############################
  # Prometheus Configuration #
  ############################
  prometheus:
    enabled: true

irs-edc-consumer:
  ##############################
  # EDC Postgres Configuration #
  ##############################
  postgresql:
    auth:
      postgresPassword: <path:traceability-irs/data/int/controlplane#databasepassword>
      password: <path:traceability-irs/data/int/controlplane#databasepassword>

  ##################################
  # EDC Controlplane Configuration #
  ##################################
  edc-controlplane:
    ingresses:
      - enabled: true
        hostname: "irs-consumer-controlplane.int.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - ids
          - data
        className: ""
        tls:
          - hosts:
              - "irs-consumer-controlplane.int.demo.catena-x.net"
            secretName: tls-secret
        certManager:
          issuer: ""
          clusterIssuer: ""

    edc:
      postgresql:
        password: <path:traceability-irs/data/int/controlplane#databasepassword>
      transfer:
        proxy:
          token:
            verifier:
              publickey:
                alias: irs-int-daps-cert
            signer:
              privatekey:
                alias: irs-int-daps-key
      api:
        auth:
          key: "123456"
      controlplane:
        url: "https://irs-consumer-controlplane.int.demo.catena-x.net"
      dataplane:
        url: "https://irs-consumer-dataplane.int.demo.catena-x.net"
    configuration:
      properties: |-
        edc.oauth.client.id=D9:3A:80:9E:9C:21:95:12:5C:C2:1D:D8:30:80:7A:B9:DD:5F:C9:09:keyid:D9:3A:80:9E:9C:21:95:12:5C:C2:1D:D8:30:80:7A:B9:DD:5F:C9:09
        edc.oauth.private.key.alias=irs-int-daps-key
        edc.oauth.provider.jwks.url=https://daps1.int.demo.catena-x.net/.well-known/jwks.json
        edc.oauth.public.key.alias=irs-int-daps-cert
        edc.oauth.token.url=https://daps1.int.demo.catena-x.net/token
        edc.vault.hashicorp.url=https://vault.demo.catena-x.net
        edc.vault.hashicorp.token=<path:traceability-irs/data/int/controlplane#vaultToken>
        edc.vault.hashicorp.api.secret.path=/v1/traceability-irs
        edc.data.encryption.keys.alias=irs-int-daps-key
        edc.data.encryption.algorithm=NONE

  ###############################
  # EDC Dataplane Configuration #
  ###############################
  edc-dataplane:
    edc:
      api:
        auth:
          key: "123456"
    ## Ingress declaration to expose the network service.
    ingresses:
      ## Public / Internet facing Ingress
      - enabled: true
        # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
        hostname: "irs-consumer-dataplane.int.demo.catena-x.net"
        # -- Additional ingress annotations to add
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        # -- EDC endpoints exposed by this ingress resource
        endpoints:
          - public
        # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
        className: "nginx"
        # -- Enables TLS on the ingress resource
        tls:
          - hosts:
              - "irs-consumer-dataplane.int.demo.catena-x.net"
            # Default secret for certificate creation already provided to your namespace
            secretName: tls-secret
        ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
        certManager:
          # -- If preset enables certificate generation via cert-manager namespace scoped issuer
          issuer: ""
          # -- If preset enables certificate generation via cert-manager cluster-wide issuer
          clusterIssuer: ""

    configuration:
      properties: |-
        edc.oauth.client.id=D9:3A:80:9E:9C:21:95:12:5C:C2:1D:D8:30:80:7A:B9:DD:5F:C9:09:keyid:D9:3A:80:9E:9C:21:95:12:5C:C2:1D:D8:30:80:7A:B9:DD:5F:C9:09
        edc.oauth.private.key.alias=irs-int-daps-key
        edc.oauth.provider.audience=idsc:IDS_CONNECTORS_ALL
        edc.oauth.provider.jwks.url=https://daps1.int.demo.catena-x.net/.well-known/jwks.json
        edc.oauth.public.key.alias=irs-int-daps-cert
        edc.oauth.token.url=https://daps1.int.demo.catena-x.net/token
        edc.vault.hashicorp.url=https://vault.demo.catena-x.net
        edc.vault.hashicorp.token=<path:traceability-irs/data/int/controlplane#vaultToken>
        edc.vault.hashicorp.api.secret.path=/v1/traceability-irs
